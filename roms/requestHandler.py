# @fileName: requestHandler.py
# @creation_date: 20/09/2024
# @authors: averyark
""" Note: This description is generated by Copilot
This module handles incoming requests by validating session tokens and executing user requests..
"""

from user import begin_session, activeSessions
from icecream import ic
import sqlite3
import fastapi

credentialsPath = "mock-database.db"
db = sqlite3.connect(credentialsPath)
cursor = db.cursor()

def handleRequest(sessionToken: str, requestKind, *arg):
    # Validate SessionToken
    userObject = None

    if not activeSessions[sessionToken]:
        # Check database
        try:
            cursor.execute(
                f'''
                    SELECT userId FROM UserSessionTokens
                    WHERE token IS {sessionToken}
                '''
            )
            row = cursor.fetchone()

            if row != None:
                userId = row[0]
                userObject = begin_session(userId, sessionToken)
            else:
                raise LookupError("Invalid session token")
        except Exception as err:
            print(f"Unable to load userdata: {err}")
    else:
        userObject = activeSessions[sessionToken]

    userObject.execute_user_request(requestKind, *arg)

#fastapi

# @fileName: login.py
# @creation_date: 19/09/2024
# @authors: averyark

""" Note: This description is generated by Copilot
This module provides functionality for user login and session management.
"""

from icecream import ic
import sqlite3
import uuid
from .credentials import validate_credentials
from .user import begin_session

credentialsPath = "mock-database.db"
db = sqlite3.connect(credentialsPath)
cursor = db.cursor()

def login(userId: int, credential: str) -> None:
    # validate credentials
    if not validate_credentials(userId, credential):
        raise RuntimeError("Invalid credentials")

    sessionToken = None

    try:
        cursor.execute(
            f'''
                SELECT token FROM UserSessionTokens
                WHERE userId IS {userId}
            '''
        )
        row = cursor.fetchone()

        if row != None:
            sessionToken = row[0]
        else:
            sessionToken = str(uuid.uuid1())

            cursor.execute(
                f'''
                    INSERT INTO UserSessionTokens(
                        userId, token
                    ) VALUES (
                        {userId},
                        '{sessionToken}'
                    )
                '''
            )
            db.commit()
    except Exception as err:
        sessionToken = None
        print(f"Unable to load userdata: {err}")

    if not sessionToken:
        print("User doesn't have a sessionToken")
        return

    return begin_session(userId, sessionToken)

def get_userid_from_email(email: str) -> int:
    userId = None
    try:
        cursor.execute(
            f'''
                SELECT
                    id
                FROM Userdata WHERE email IS '{email}'
            '''
        )
        userId = cursor.fetchone()[0]
    except Exception as err:
        pass

    return userId

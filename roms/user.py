# @fileName: user.py
# @creation_date: 14/09/2024
# @authors: averyark

""" Note: This description is generated by Copilot
This module provides functionalities for user management, including validation, session handling, and user data synchronization with a SQLite database.
"""

import pendulum
from icecream import ic
from pydantic import BaseModel

import sqlite3
import threading
from time import time

from .database import UserData, get_user_data_in_dict
from .validate import validate_user_data

credentialsPath = "mock-database.db"
db = sqlite3.connect(credentialsPath)
cursor = db.cursor()

userPermissionRanks = {
    'Manager': 255,
    'Chef': 100,
    'Cashier': 50,
    'Customer': 10
}

def get_user_class(userPermission: int):
    for className, classRank in userPermissionRanks.items():
        if userPermission < classRank:
            continue

        userClassName = className
        return userClassName

    if not userClassName is None:
        return

    return None

"""
    Logout is different from destruct!
    Logging out always trigger destruct but destruct doesn't mean the user is logout'd.
"""
class User(UserData):
    def get_role(self):
        ic(self, self.permissionLevel)
        return get_user_class(self.permissionLevel)

    def get_birthday_object(self):
       return pendulum.from_format(self.birthday, "YYYY-MM-DD")

def get_user(user_id: int) -> User:
    return User(**get_user_data_in_dict(user_id))
